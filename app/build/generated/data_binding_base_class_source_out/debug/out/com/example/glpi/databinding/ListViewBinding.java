// Generated by view binder compiler. Do not edit!
package com.example.glpi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.glpi.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cardPedidos;

  @NonNull
  public final TextView textViewIncidenciaContent;

  @NonNull
  public final TextView textViewIncidenciaName;

  @NonNull
  public final TextView textViewState;

  @NonNull
  public final TextView textViewUrgency;

  private ListViewBinding(@NonNull LinearLayout rootView, @NonNull CardView cardPedidos,
      @NonNull TextView textViewIncidenciaContent, @NonNull TextView textViewIncidenciaName,
      @NonNull TextView textViewState, @NonNull TextView textViewUrgency) {
    this.rootView = rootView;
    this.cardPedidos = cardPedidos;
    this.textViewIncidenciaContent = textViewIncidenciaContent;
    this.textViewIncidenciaName = textViewIncidenciaName;
    this.textViewState = textViewState;
    this.textViewUrgency = textViewUrgency;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardPedidos;
      CardView cardPedidos = ViewBindings.findChildViewById(rootView, id);
      if (cardPedidos == null) {
        break missingId;
      }

      id = R.id.textViewIncidenciaContent;
      TextView textViewIncidenciaContent = ViewBindings.findChildViewById(rootView, id);
      if (textViewIncidenciaContent == null) {
        break missingId;
      }

      id = R.id.textViewIncidenciaName;
      TextView textViewIncidenciaName = ViewBindings.findChildViewById(rootView, id);
      if (textViewIncidenciaName == null) {
        break missingId;
      }

      id = R.id.textViewState;
      TextView textViewState = ViewBindings.findChildViewById(rootView, id);
      if (textViewState == null) {
        break missingId;
      }

      id = R.id.textViewUrgency;
      TextView textViewUrgency = ViewBindings.findChildViewById(rootView, id);
      if (textViewUrgency == null) {
        break missingId;
      }

      return new ListViewBinding((LinearLayout) rootView, cardPedidos, textViewIncidenciaContent,
          textViewIncidenciaName, textViewState, textViewUrgency);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
